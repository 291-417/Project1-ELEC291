0000              1   ; Project 1: Reflow oven controller
0000              2   ; ELEC 291 UBC
0000              3   ; Oakley Bach-Raabe, Jashan Brar, Trevor MacKay, Ryan Meshulam, Anusika Nijher
0000              4   ; Includes modified code from Jesus Calvino-Fraga
0000              5   ; GPL v3
                  7   $LIST
0000              9   
0000             10   CLK         EQU 14746000  ; Microcontroller system clock frequency in Hz
0000             11   CCU_RATE    EQU 22050     ; 22050Hz is the sampling rate of the wav file we are playing
0000             12   CCU_RELOAD  EQU ((65536-((CLK/(2*CCU_RATE)))))
0000             13   BAUD        EQU 115200
0000             14   BRVAL       EQU ((CLK/BAUD)-16)
0000             15   XTAL        EQU 7373000
0000             16   
0000             17   LCD_RS equ P0.5
0000             18   LCD_RW equ P0.6
0000             19   LCD_E  equ P0.7
0000             20   LCD_D4 equ P1.2
0000             21   LCD_D5 equ P1.3
0000             22   LCD_D6 equ P1.4
0000             23   LCD_D7 equ P1.6
0000             24   DIP_BUTTON1 equ P3.0
0000             25   PLAY_BUTTON equ P0.3
0000             26   SOUND equ P2.7
0000             27   
0000             28   FLASH_CE    EQU P2.4
0000             29   
0030             30   dseg at 30H
0030             31            w:   ds 3 ; 24-bit play counter.  Decremented in CCU ISR.
0033             32     x:   ds 4
0037             33     y:   ds 4
003B             34     bcd: ds 5
0040             35     sound_start: ds 3
0043             36    
0000             37   bseg
0000             38   
0000             39   mf: dbit 1
0001             40   PB0: dbit 1 ; Variable to store the state of pushbutton 0 after calling ADC_to_PB below
0002             41   PB1: dbit 1 ; Variable to store the state of pushbutton 1 after calling ADC_to_PB below
0003             42   PB2: dbit 1 ; Variable to store the state of pushbutton 2 after calling ADC_to_PB below
0004             43   PB3: dbit 1 ; Variable to store the state of pushbutton 3 after calling ADC_to_PB below
0005             44   PB4: dbit 1 ; Variable to store the state of pushbutton 4 after calling ADC_to_PB below
0006             45   PB5: dbit 1 ; Variable to store the state of pushbutton 5 after calling ADC_to_PB below
0007             46   PB6: dbit 1 ; Variable to store the state of pushbutton 6 after calling ADC_to_PB below
0008             47   
0000             48   cseg
0000             49   
0000             50   org 0x0000 ; Reset vector
0000 02096B      51       ljmp MainProgram
0003             52   
0003             53   org 0x0003 ; External interrupt 0 vector (not used in this code)
0003 32          54            reti
0004             55   
000B             56   org 0x000B ; Timer/Counter 0 overflow interrupt vector (not used in this code)
000B 32          57            reti
000C             58   
0013             59   org 0x0013 ; External interrupt 1 vector (not used in this code)
0013 32          60            reti
0014             61   
001B             62   org 0x001B ; Timer/Counter 1 overflow interrupt vector (not used in this code
001B 32          63            reti
001C             64   
0023             65   org 0x0023 ; Serial port receive/transmit interrupt vector (not used in this code)
0023 32          66            reti
0024             67   
005B             68   org 0x005b ; CCU interrupt vector.  Used in this code to replay the wave file.
005B 0203EB      69            ljmp CCU_ISR
005E             70   
005E             71   
005E             72   
                546   $LIST
                 77   $LIST
092B             79   
092B             80   ;---------------------------------;
092B             81   ; Initial configuration of ports. ;
092B             82   ; After reset the default for the ;
092B             83   ; pins is 'Open Drain'.  This     ;
092B             84   ; routine changes them pins to    ;
092B             85   ; Quasi-bidirectional like in the ;
092B             86   ; original 8051.                  ;
092B             87   ; Notice that P1.2 and P1.3 are   ;
092B             88   ; always 'Open Drain'. If those   ;
092B             89   ; pins are to be used as output   ;
092B             90   ; they need a pull-up resistor.   ;
092B             91   ;---------------------------------;
092B             92   Ports_Init:
092B             93       ; Configure all the ports in bidirectional mode:
092B 758400      94       mov P0M1, #00H
092E 758500      95       mov P0M2, #00H
0931 759100      96       mov P1M1, #00H
0934 759200      97       mov P1M2, #00H ; WARNING: P1.2 and P1.3 need 1 kohm pull-up resistors if used as outputs!
0937 75A400      98       mov P2M1, #00H
093A 75A500      99       mov P2M2, #00H
093D 75B100     100       mov P3M1, #00H
0940 75B200     101       mov P3M2, #00H
0943 22         102            ret
0944            103   
0944            104   ; Display a 3-digit BCD number in the LCD
0944            105   LCD_3BCD:
0944 E53C       106            mov a, bcd+1
0946 540F       107            anl a, #0x0f
0948 4430       108            orl a, #'0'
094A 12031C     109            lcall ?WriteData
094D E53B       110            mov a, bcd+0
094F C4         111            swap a
0950 540F       112            anl a, #0x0f
0952 4430       113            orl a, #'0'
0954 12031C     114            lcall ?WriteData
0957 E53B       115            mov a, bcd+0
0959 540F       116            anl a, #0x0f
095B 4430       117            orl a, #'0'
095D 12031C     118            lcall ?WriteData
0960 22         119            ret
0961            120   
0961            121   Sound_Start_Init:
0961 7540FF     122     mov sound_start+0, #0xff
0964 754100     123     mov sound_start+1, #0x00
0967 754200     124     mov sound_start+2, #0x00
096A 22         125     ret
096B            126   
096B            127   MainProgram:
096B 75817F     128     mov SP, #0x7F
096E            129     
096E 120961     130     lcall Sound_Start_Init
0971 12092B     131     lcall Ports_Init ; Default all pins as bidirectional I/O. See Table 42.
0974 12042E     132     lcall Double_Clk
0977 12041E     133     lcall InitDAC ; Call after 'Ports_Init
097A            134            
097A 1203D4     135     lcall CCU_Init
097D 120436     136     lcall Init_SPI
0980            137     
0980 120690     138     lcall InitSerialPort
0983 1206A6     139     lcall InitADC0
0986 120326     140     lcall LCD_4BIT
0989            141   
0989            142     ; Set beginning message on LCD
0989 C0E0       143            push acc
098B 7401       143            mov a, #1
098D 14         143            dec a
098E 120368     143            lcall ?Set_Cursor_1 ; Select column and row
0991 D0E0       143            pop acc
0993 C083       144            push dph
0995 C082       144            push dpl
0997 C0E0       144            push acc
0999 900792     144            mov dptr, #Title
099C 12035B     144            lcall ?Send_Constant_String
099F D0E0       144            pop acc
09A1 D082       144            pop dpl
09A3 D083       144            pop dph
09A5            145   
09A5 120683     146     lcall Wait1S ; Wait a bit so PUTTy has a chance to start
09A8            147   
09A8 9007A4     148     mov dptr, #InitialMessage
09AB 120732     149            lcall SendString
09AE            150   
09AE C2A7       151     clr SOUND ; Disable speaker
09B0 C2C8       152     clr TMOD20 ; Stop CCU timer
09B2 D2AF       153            setb EA ; Enable global interrupts.
09B4            154   
09B4            155   forever:
09B4 90080A     156     mov dptr, #Temp
09B7 120732     157            lcall SendString
09BA 12081A     158     lcall Read_Temperature
09BD 9007F2     159     mov dptr, #Thermocouple
09C0 120732     160            lcall SendString
09C3 1208CF     161     lcall Get_Thermocouple
09C6 12073D     162     lcall ADC_to_PB
09C9 120885     163     lcall Display_PushButtons_ADC
09CC 120683     164     lcall Wait1S
09CF 2083E2     165     jb PLAY_BUTTON, forever
09D2            166     ;Wait_Milli_Seconds(#50)
09D2 2083DF     167     jb PLAY_BUTTON, forever
09D5 3083FD     168     jnb PLAY_BUTTON, $
09D8            169     ;mov 
09D8 1203A7     170     lcall Play_Whole_Memory
09DB 0209B4     171     ljmp forever
09DE            172   
09DE            173   en
