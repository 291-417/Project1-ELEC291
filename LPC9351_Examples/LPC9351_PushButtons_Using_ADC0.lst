0000              1   ; This program shows how to read many push buttons using just one analog input.
0000              2   ; The idea is to make a voltage divider with many resistors and the push buttons
0000              3   ; connect the diferent voltages to an analog input.  In this example we have seven push
0000              4   ; buttons.  The diagram is in this image: push_button_adc.jpg.  The common pin of all
0000              5   ; the push buttons is connected to one of the analog input pins of ADC0.  Warning:
0000              6   ; since P2.0 and P2.1 are used with the LCD we can not use those channels with ADC0.
0000              7   ; The common input for all the push buttons is AD0DAT1 which is P1.7.
0000              8   ;
0000              9   
                 -1   $MOD9351
0000              1   ;
0000              2   ;  MOD9351: Register/bit definitions for the P89LPC9351
0000              3   ;
0000              4   ;   Copyright (C) 2009-2011  Jesus Calvino-Fraga, jesuscf@gmail.com
0000              5   ;
0000              6   ;   This library is free software; you can redistribute it and/or
0000              7   ;   modify it under the terms of the GNU Lesser General Public
0000              8   ;   License as published by the Free Software Foundation; either
0000              9   ;   version 2.1 of the License, or (at your option) any later version.
0000             10   ;
0000             11   ;   This library is distributed in the hope that it will be useful,
0000             12   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             13   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             14   ;   Lesser General Public License for more details.
0000             15   ;
0000             16   ;   You should have received a copy of the GNU Lesser General Public
0000             17   ;   License along with this library; if not, write to the Free Software
0000             18   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             19   ;
0000             20    
0000             21   ACC             DATA  0E0H ; Accumulator
0000             22   ADCON0          DATA  08EH ; A/D control register 0
0000             23   ADCON1          DATA  097H ; A/D control register 1
0000             24   ADINS           DATA  0A3H ; A/D input select
0000             25   ADMODA          DATA  0C0H ; A/D mode register A
0000             26   BNDI1           BIT   0C7H
0000             27   BURST1          BIT   0C6H
0000             28   SCC1            BIT   0C5H
0000             29   SCAN1           BIT   0C4H
0000             30   BNDI0           BIT   0C3H
0000             31   BURST0          BIT   0C2H
0000             32   SCC0            BIT   0C1H
0000             33   SCAN0           BIT   0C0H
0000             34   ADMODB          DATA  0A1H ; A/D mode register B
0000             35   AD0BH           DATA  0BBH ; A/D_0 boundary high register
0000             36   AD0BL           DATA  0A6H ; A/D_0 boundary low register
0000             37   AD0DAT0         DATA  0C5H ; A/D_0 data register 0
0000             38   AD0DAT1         DATA  0C6H ; A/D_0 data register 1
0000             39   AD0DAT2         DATA  0C7H ; A/D_0 data register 2
0000             40   AD0DAT3         DATA  0F4H ; A/D_0 data register 3
0000             41   AD1BH           DATA  0C4H ; A/D_1 boundary high register
0000             42   AD1BL           DATA  0BCH ; A/D_1 boundary low register
0000             43   AD1DAT0         DATA  0D5H ; A/D_1 data register 0
0000             44   AD1DAT1         DATA  0D6H ; A/D_1 data register 1
0000             45   AD1DAT2         DATA  0D7H ; A/D_1 data register 2
0000             46   AD1DAT3         DATA  0F5H ; A/D_1 data register 3
0000             47   AUXR1           DATA  0A2H ; Auxiliary function register
0000             48   B               DATA  0F0H ; B register
0000             49   BRGR0           DATA  0BEH ; Baud rate generator 0 rate low
0000             50   BRGR1           DATA  0BFH ; Baud rate generator 0 rate high
0000             51   BRGCON          DATA  0BDH ; Baud rate generator 0 control
0000             52   CCCRA           DATA  0EAH ; Capture compare A control register
0000             53   CCCRB           DATA  0EBH ; Capture compare B control register
0000             54   CCCRC           DATA  0ECH ; Capture compare C control register
0000             55   CCCRD           DATA  0EDH ; Capture compare D control register
0000             56   CMP1            DATA  0ACH ; Comparator 1 control register
0000             57   CMP2            DATA  0ADH ; Comparator 2 control register
0000             58   DEECON          DATA  0F1H ; Data EEPROM control register
0000             59   DEEDAT          DATA  0F2H ; Data EEPROM data register
0000             60   DEEADR          DATA  0F3H ; Data EEPROM address register
0000             61   DIVM            DATA  095H ; CPU clock divide-by-M control
0000             62   DPH             DATA  083H ; Data pointer high
0000             63   DPL             DATA  082H ; Data pointer low
0000             64   FMADRH          DATA  0E7H ; Program flash address high
0000             65   FMADRL          DATA  0E6H ; Program flash address low
0000             66   FMCON           DATA  0E4H ; Program flash control Read
0000             67   FMDATA          DATA  0E5H ; Program flash data
0000             68   I2ADR           DATA  0DBH ; I2C-bus slave address register
0000             69   I2CON           DATA  0D8H ; I2C-bus control register
0000             70   I2EN            BIT   0DEH
0000             71   STA             BIT   0DDH
0000             72   STO             BIT   0DCH
0000             73   SI              BIT   0DBH
0000             74   AA              BIT   0DAH
0000             75   CRSEL           BIT   0D8H
0000             76   I2DAT           DATA  0DAH ; I2C-bus data register
0000             77   I2SCLH          DATA  0DDH ; Serial clock generator/SCL duty cycle register high
0000             78   I2SCLL          DATA  0DCH ; Serial clock generator/SCL duty cycle register low
0000             79   I2STAT          DATA  0D9H ; I2C-bus status register
0000             80   ICRAH           DATA  0ABH ; Input capture A register high
0000             81   ICRAL           DATA  0AAH ; Input capture A register low
0000             82   ICRBH           DATA  0AFH ; Input capture B register high
0000             83   ICRBL           DATA  0AEH ; Input capture B register low
0000             84   IEN0            DATA  0A8H ; Interrupt enable 0
0000             85   EA              BIT   0AFH
0000             86   EWDRT           BIT   0AEH
0000             87   EBO             BIT   0ADH
0000             88   ES              BIT   0ACH
0000             89   ESR             BIT   0ACH
0000             90   ET1             BIT   0ABH
0000             91   EX1             BIT   0AAH
0000             92   ET0             BIT   0A9H
0000             93   EX0             BIT   0A8H
0000             94   IEN1            DATA  0E8H ; Interrupt enable 1
0000             95   EADEE           BIT   0EFH
0000             96   EST             BIT   0EEH
0000             97   ECCU            BIT   0ECH
0000             98   ESPI            BIT   0EBH
0000             99   EC              BIT   0EAH
0000            100   EKBI            BIT   0E9H
0000            101   EI2C            BIT   0E8H
0000            102   IP0             DATA  0B8H ; Interrupt priority 0
0000            103   PWDRT           BIT   0BEH
0000            104   PBO             BIT   0BDH
0000            105   PS              BIT   0BCH
0000            106   PSR             BIT   0BCH
0000            107   PT1             BIT   0BBH
0000            108   PX1             BIT   0BAH
0000            109   PT0             BIT   0B9H
0000            110   PX0             BIT   0B8H
0000            111   IP0H            DATA  0B7H ; Interrupt priority 0 high
0000            112   IP1             DATA  0F8H ; Interrupt priority 1
0000            113   PADEE           BIT   0FFH
0000            114   PST             BIT   0FEH
0000            115   PCCU            BIT   0FCH
0000            116   PSPI            BIT   0FBH
0000            117   PC_             BIT   0FAH
0000            118   PKBI            BIT   0F9H
0000            119   PI2C            BIT   0F8H
0000            120   IP1H            DATA  0F7H ; Interrupt priority 1 high
0000            121   KBCON           DATA  094H ; Keypad control register
0000            122   KBMASK          DATA  086H ; Keypad interrupt mask register
0000            123   KBPATN          DATA  093H ; Keypad pattern register
0000            124   OCRAH           DATA  0EFH ; Output compare A register high
0000            125   OCRAL           DATA  0EEH ; Output compare A register low
0000            126   OCRBH           DATA  0FBH ; Output compare B register high
0000            127   OCRBL           DATA  0FAH ; Output compare B register low
0000            128   OCRCH           DATA  0FDH ; Output compare C register high
0000            129   OCRCL           DATA  0FCH ; Output compare C register low
0000            130   OCRDH           DATA  0FFH ; Output compare D register high
0000            131   OCRDL           DATA  0FEH ; Output compare D register low
0000            132   P0              DATA  080H ; Port 0
0000            133   T1              BIT   087H
0000            134   KB7             BIT   087H
0000            135   CMP_1           BIT   086H
0000            136   KB6             BIT   086H
0000            137   CMPREF          BIT   085H
0000            138   KB5             BIT   085H
0000            139   CIN1A           BIT   084H
0000            140   KB4             BIT   084H
0000            141   CIN1B           BIT   083H
0000            142   KB3             BIT   083H
0000            143   CIN2A           BIT   082H
0000            144   KB2             BIT   082H
0000            145   CIN2B           BIT   081H
0000            146   KB1             BIT   081H
0000            147   CMP_2           BIT   080H
0000            148   KB0             BIT   080H
0000            149   P1              DATA  090H ; Port 1
0000            150   OCC             BIT   097H
0000            151   OCB             BIT   096H
0000            152   RST             BIT   095H
0000            153   INT1            BIT   094H
0000            154   INT0            BIT   093H
0000            155   SDA             BIT   093H
0000            156   T0              BIT   092H
0000            157   SCL             BIT   092H
0000            158   RXD             BIT   091H
0000            159   TXD             BIT   090H
0000            160   P2              DATA  0A0H ; Port 2
0000            161   ICA             BIT   0A7H
0000            162   OCA             BIT   0A6H
0000            163   SPICLK          BIT   0A5H
0000            164   SS              BIT   0A4H
0000            165   MISO            BIT   0A3H
0000            166   MOSI            BIT   0A2H
0000            167   OCD             BIT   0A1H
0000            168   ICB             BIT   0A0H
0000            169   P3              DATA  0B0H ; Port 3
0000            170   XTAL1           BIT   0B1H
0000            171   XTAL2           BIT   0B0H
0000            172   P0M1            DATA  084H ; Port 0 output mode 1
0000            173   P0M2            DATA  085H ; Port 0 output mode 2
0000            174   P1M1            DATA  091H ; Port 1 output mode 1
0000            175   P1M2            DATA  092H ; Port 1 output mode 2
0000            176   P2M1            DATA  0A4H ; Port 2 output mode 1
0000            177   P2M2            DATA  0A5H ; Port 2 output mode 2
0000            178   P3M1            DATA  0B1H ; Port 3 output mode 1
0000            179   P3M2            DATA  0B2H ; Port 3 output mode 2
0000            180   PCON            DATA  087H ; Power control register
0000            181   PCONA           DATA  0B5H ; Power control register A
0000            182   PSW             DATA  0D0H ; Program status word
0000            183   CY              BIT   0D7H
0000            184   AC              BIT   0D6H
0000            185   F0              BIT   0D5H
0000            186   RS1             BIT   0D4H
0000            187   RS0             BIT   0D3H
0000            188   OV              BIT   0D2H
0000            189   F1              BIT   0D1H
0000            190   P               BIT   0D0H
0000            191   PT0AD           DATA  0F6H ; Port 0 digital input disable
0000            192   RSTSRC          DATA  0DFH ; Reset source register
0000            193   RTCCON          DATA  0D1H ; RTC control
0000            194   RTCH            DATA  0D2H ; RTC register high
0000            195   RTCL            DATA  0D3H ; RTC register low
0000            196   SADDR           DATA  0A9H ; Serial port address register
0000            197   SADEN           DATA  0B9H ; Serial port address enable
0000            198   SBUF            DATA  099H ; Serial Port data buffer register
0000            199   SCON            DATA  098H ; Serial port control
0000            200   SM0             BIT   09FH
0000            201   FE              BIT   09FH
0000            202   SM1             BIT   09EH
0000            203   SM2             BIT   09DH
0000            204   REN             BIT   09CH
0000            205   TB8             BIT   09BH
0000            206   RB8             BIT   09AH
0000            207   TI              BIT   099H
0000            208   RI              BIT   098H
0000            209   SSTAT           DATA  0BAH ; Serial port extended status register
0000            210   SP              DATA  081H ; Stack pointer
0000            211   SPCTL           DATA  0E2H ; SPI control register
0000            212   SPSTAT          DATA  0E1H ; SPI status register
0000            213   SPDAT           DATA  0E3H ; SPI data register
0000            214   TAMOD           DATA  08FH ; Timer 0 and 1 auxiliary mode
0000            215   TCON            DATA  088H ; Timer 0 and 1 control
0000            216   TF1             BIT   08FH
0000            217   TR1             BIT   08EH
0000            218   TF0             BIT   08DH
0000            219   TR0             BIT   08CH
0000            220   IE1             BIT   08BH
0000            221   IT1             BIT   08AH
0000            222   IE0             BIT   089H
0000            223   IT0             BIT   088H
0000            224   TCR20           DATA  0C8H ; CCU control register 0
0000            225   PLEEN           BIT   0CFH
0000            226   HLTRN           BIT   0CEH
0000            227   HLTEN           BIT   0CDH
0000            228   ALTCD           BIT   0CCH
0000            229   ALTAB           BIT   0CBH
0000            230   TDIR2           BIT   0CAH
0000            231   TMOD21          BIT   0C9H
0000            232   TMOD20          BIT   0C8H
0000            233   TCR21           DATA  0F9H ; CCU control register 1
0000            234   TH0             DATA  08CH ; Timer 0 high
0000            235   TH1             DATA  08DH ; Timer 1 high
0000            236   TH2             DATA  0CDH ; CCU timer high
0000            237   TICR2           DATA  0C9H ; CCU interrupt control register
0000            238   TIFR2           DATA  0E9H ; CCU interrupt flag register
0000            239   TISE2           DATA  0DEH ; CCU interrupt status encode register
0000            240   TL0             DATA  08AH ; Timer 0 low
0000            241   TL1             DATA  08BH ; Timer 1 low
0000            242   TL2             DATA  0CCH ; CCU timer low
0000            243   TMOD            DATA  089H ; Timer 0 and 1 mode
0000            244   TOR2H           DATA  0CFH ; CCU reload register high
0000            245   TOR2L           DATA  0CEH ; CCU reload register low
0000            246   TPCR2H          DATA  0CBH ; Prescaler control register high
0000            247   TPCR2L          DATA  0CAH ; Prescaler control register low
0000            248   TRIM            DATA  096H ; Internal oscillator trim register
0000            249   WDCON           DATA  0A7H ; Watchdog control register
0000            250   WDL             DATA  0C1H ; Watchdog load
0000            251   WFEED1          DATA  0C2H ; Watchdog feed 1
0000            252   WFEED2          DATA  0C3H ; Watchdog feed 2
0000            253   BODCFG          XDATA 0FFC8H ; BOD configuration register
0000            254   CLKCON          XDATA 0FFDEH ; CLOCK Control register
0000            255   PGACON1         XDATA 0FFE1H ; PGA1 control register
0000            256   PGACON1B        XDATA 0FFE4H ; PGA1 control register B
0000            257   PGA1TRIM8X16X   XDATA 0FFE3H ; PGA1 trim register
0000            258   PGA1TRIM2X4X    XDATA 0FFE2H ; PGA1 trim register
0000            259   PGACON0         XDATA 0FFCAH ; PGA0 control register
0000            260   PGACON0B        XDATA 0FFCEH ; PGA0 control register B
0000            261   PGA0TRIM8X16X   XDATA 0FFCDH ; PGA0 trim register
0000            262   PGA0TRIM2X4X    XDATA 0FFCCH ; PGA0 trim register
0000            263   RTCDATH         XDATA 0FFBFH ; Real-time clock data register high
0000            264   RTCDATL         XDATA 0FFBEH ; Real-time clock data register low
0000             11   
0000             12   XTAL EQU 7373000
0000             13   BAUD EQU 115200
0000             14   BRVAL EQU ((XTAL/BAUD)-16)
0000             15   
0000             16   CSEG at 0x0000
0000 0204F6      17   ljmp     MainProgram
0003             18   
0030             19   DSEG at 0x30
0030             20   x:   ds 4
0034             21   y:   ds 4
0038             22   bcd: ds 5
003D             23   
003D             24   
0000             25   BSEG
0000             26   mf: dbit 1
0001             27   PB0: dbit 1 ; Variable to store the state of pushbutton 0 after calling ADC_to_PB below
0002             28   PB1: dbit 1 ; Variable to store the state of pushbutton 1 after calling ADC_to_PB below
0003             29   PB2: dbit 1 ; Variable to store the state of pushbutton 2 after calling ADC_to_PB below
0004             30   PB3: dbit 1 ; Variable to store the state of pushbutton 3 after calling ADC_to_PB below
0005             31   PB4: dbit 1 ; Variable to store the state of pushbutton 4 after calling ADC_to_PB below
0006             32   PB5: dbit 1 ; Variable to store the state of pushbutton 5 after calling ADC_to_PB below
0007             33   PB6: dbit 1 ; Variable to store the state of pushbutton 6 after calling ADC_to_PB below
0008             34   
0003             35   cseg
0003             36   ; These 'equ' must match the wiring between the microcontroller and the LCD!
0003             37   LCD_RS equ P0.7
0003             38   LCD_RW equ P3.0
0003             39   LCD_E  equ P3.1
0003             40   LCD_D4 equ P2.3
0003             41   LCD_D5 equ P2.4
0003             42   LCD_D6 equ P2.5
0003             43   LCD_D7 equ P2.6
                546   $LIST
                 46   $LIST
0328             48   
0328             49   
0328             50   Wait10us:
0328 7812        51       mov R0, #18
032A D8FE        52       djnz R0, $ ; 2 machine cycles-> 2*0.27126us*18=10us
032C 22          53            ret
032D             54   putchar:
032D 109902      55            jbc     TI,putchar_L1
0330 80FB        56            sjmp putchar
0332             57   putchar_L1:
0332 F599        58            mov     SBUF,a
0334 22          59            ret
0335             60            
0335             61   getchar:
0335 109802      62            jbc     RI,getchar_L1
0338 80FB        63            sjmp getchar
033A             64   getchar_L1:
033A E599        65            mov     a,SBUF
033C 22          66            ret
033D             67   
033D             68   Wait1S:
033D 7A28        69            mov R2, #40
033F 79FA        70   M3:      mov R1, #250
0341 78B8        71   M2:      mov R0, #184
0343 D8FE        72   M1:      djnz R0, M1 ; 2 machine cycles-> 2*0.27126us*184=100us
0345 D9FA        73            djnz R1, M2 ; 100us*250=0.025s
0347 DAF6        74            djnz R2, M3 ; 0.025s*40=1s
0349 22          75            ret
034A             76   
034A             77   InitSerialPort:
034A 75BD00      78            mov     BRGCON,#0x00
034D 75BF00      79            mov     BRGR1,#high(BRVAL)
0350 75BE30      80            mov     BRGR0,#low(BRVAL)
0353 75BD03      81            mov     BRGCON,#0x03 ; Turn-on the baud rate generator
0356 759852      82            mov     SCON,#0x52 ; Serial port in mode 1, ren, txrdy, rxempty
0359 759100      83            mov     P1M1,#0x00 ; Enable pins RxD and TXD
035C 759200      84            mov     P1M2,#0x00 ; Enable pins RxD and TXD
035F 22          85            ret
0360             86   
0360             87   InitADC0:
0360             88            ; ADC0_0 is connected to P1.7
0360             89            ; ADC0_1 is connected to P0.0
0360             90       ; Configure pins P1.7 and P0.0  as inputs
0360 438401      91       orl P0M1, #00000001b
0363 5385FE      92       anl P0M2, #11111110b
0366 439180      93       orl P1M1, #10000000b
0369 53927F      94       anl P1M2, #01111111b
036C 43A403      95       orl P2M1, #00000011b
036F 53A5FC      96       anl P2M2, #11111100b
0372             97            ; Setup ADC0
0372 D2C2        98            setb BURST0 ; Autoscan continuos conversion mode
0374 75A120      99            mov     ADMODB,#0x20 ;ADC0 clock is 7.3728MHz/2
0377 75A30F     100            mov     ADINS,#0x0F ; Select four channels of ADC0 for conversion
037A 758E05     101            mov     ADCON0,#0x05 ; Enable the converter and start immediately
037D            102            ; Wait for first conversion to complete
037D            103   InitADC0_L1:
037D E58E       104            mov     a,ADCON0
037F 30E3FB     105            jnb     acc.3,InitADC0_L1
0382 22         106            ret
0383            107   
0383 30313233   108   HexAscii: db '0123456789ABCDEF'
     34353637
     38394142
     43444546
0393            109   SendTemp:
0393 900383     110            mov dptr, #HexAscii 
0396            111            
0396 E539       112            mov a, bcd+1
0398 C4         113            swap a
0399 540F       114            anl a, #0xf
039B 93         115            movc a, @a+dptr
039C 12032D     116            lcall putchar
039F E539       117            mov a, bcd+1
03A1 540F       118            anl a, #0xf
03A3 93         119            movc a, @a+dptr
03A4 12032D     120            lcall putchar
03A7            121   
03A7 742E       122            mov a, #'.'
03A9 12032D     123            lcall putchar
03AC            124   
03AC E538       125            mov a, bcd+0
03AE C4         126            swap a
03AF 540F       127            anl a, #0xf
03B1 93         128            movc a, @a+dptr
03B2 12032D     129            lcall putchar
03B5 E538       130            mov a, bcd+0
03B7 540F       131            anl a, #0xf
03B9 93         132            movc a, @a+dptr
03BA 12032D     133            lcall putchar
03BD            134            
03BD 740D       135            mov a, #'\r'
03BF 12032D     136            lcall putchar
03C2 740A       137            mov a, #'\n'
03C4 12032D     138            lcall putchar   
03C7 22         139            ret
03C8            140            
03C8            141   SendHex:
03C8 7430       142            mov a, #'0'
03CA 12032D     143            lcall putchar
03CD 7478       144            mov a, #'x'
03CF 12032D     145            lcall putchar
03D2 900383     146            mov dptr, #HexAscii 
03D5 E5F0       147            mov a, b
03D7 C4         148            swap a
03D8 540F       149            anl a, #0xf
03DA 93         150            movc a, @a+dptr
03DB 12032D     151            lcall putchar
03DE E5F0       152            mov a, b
03E0 540F       153            anl a, #0xf
03E2 93         154            movc a, @a+dptr
03E3 12032D     155            lcall putchar
03E6 7420       156            mov a, #' '
03E8 12032D     157            lcall putchar
03EB 22         158            ret
03EC            159            
03EC            160   SendString:
03EC E4         161       clr a
03ED 93         162       movc a, @a+dptr
03EE 6006       163       jz SendString_L1
03F0 12032D     164       lcall putchar
03F3 A3         165       inc dptr
03F4 80F6       166       sjmp SendString  
03F6            167   SendString_L1:
03F6 22         168            ret
03F7            169   
03F7            170   ADC_to_PB:
03F7 D207       171            setb PB6
03F9 D206       172            setb PB5
03FB D205       173            setb PB4
03FD D204       174            setb PB3
03FF D203       175            setb PB2
0401 D202       176            setb PB1
0403 D201       177            setb PB0
0405            178            ; Check PB6
0405 C3         179            clr c
0406 E5C5       180            mov a, AD0DAT0
0408 94C4       181            subb a, #(206-10) ; 2.8V=216*(3.3/255); the -10 is to prevent false readings
040A 4003       182            jc ADC_to_PB_L6
040C C207       183            clr PB6
040E 22         184            ret
040F            185   ADC_to_PB_L6:
040F            186            ; Check PB5
040F C3         187            clr c
0410 E5C5       188            mov a, AD0DAT0
0412 94AF       189            subb a, #(185-10) ; 2.4V=185*(3.3/255); the -10 is to prevent false readings
0414 4003       190            jc ADC_to_PB_L5
0416 C206       191            clr PB5
0418 22         192            ret
0419            193   ADC_to_PB_L5:
0419            194            ; Check PB4
0419 C3         195            clr c
041A E5C5       196            mov a, AD0DAT0
041C 9490       197            subb a, #(154-10) ; 2.0V=154*(3.3/255); the -10 is to prevent false readings
041E 4003       198            jc ADC_to_PB_L4
0420 C205       199            clr PB4
0422 22         200            ret
0423            201   ADC_to_PB_L4:
0423            202            ; Check PB3
0423 C3         203            clr c
0424 E5C5       204            mov a, AD0DAT0
0426 9471       205            subb a, #(123-10) ; 1.6V=123*(3.3/255); the -10 is to prevent false readings
0428 4003       206            jc ADC_to_PB_L3
042A C204       207            clr PB3
042C 22         208            ret
042D            209   ADC_to_PB_L3:
042D            210            ; Check PB2
042D C3         211            clr c
042E E5C5       212            mov a, AD0DAT0
0430 9452       213            subb a, #(92-10) ; 1.2V=92*(3.3/255); the -10 is to prevent false readings
0432 4003       214            jc ADC_to_PB_L2
0434 C203       215            clr PB2
0436 22         216            ret
0437            217   ADC_to_PB_L2:
0437            218            ; Check PB1
0437 C3         219            clr c
0438 E5C5       220            mov a, AD0DAT0
043A 9433       221            subb a, #(61-10) ; 0.8V=61*(3.3/255); the -10 is to prevent false readings
043C 4003       222            jc ADC_to_PB_L1
043E C202       223            clr PB1
0440 22         224            ret
0441            225   ADC_to_PB_L1:
0441            226            ; Check PB1
0441 C3         227            clr c
0442 E5C5       228            mov a, AD0DAT0
0444 9414       229            subb a, #(30-10) ; 0.4V=30*(3.3/255); the -10 is to prevent false readings
0446 4003       230            jc ADC_to_PB_L0
0448 C201       231            clr PB0
044A 22         232            ret
044B            233   ADC_to_PB_L0:
044B            234            ; No pusbutton pressed  
044B 22         235            ret
044C            236   
044C            237   Display_PushButtons_ADC:
044C C0E0       238            push acc
044E 7401       238            mov a, #1
0450 14         238            dec a
0451 12009B     238            lcall ?Set_Cursor_2 ; Select column and row
0454 D0E0       238            pop acc
0456 7430       239            mov a, #'0'
0458 A207       240            mov c, PB6
045A 3400       241            addc a, #0
045C 120051     242       lcall ?WriteData     
045F 7430       243            mov a, #'0'
0461 A206       244            mov c, PB5
0463 3400       245            addc a, #0
0465 120051     246       lcall ?WriteData     
0468 7430       247            mov a, #'0'
046A A205       248            mov c, PB4
046C 3400       249            addc a, #0
046E 120051     250       lcall ?WriteData     
0471 7430       251            mov a, #'0'
0473 A204       252            mov c, PB3
0475 3400       253            addc a, #0
0477 120051     254       lcall ?WriteData     
047A 7430       255            mov a, #'0'
047C A203       256            mov c, PB2
047E 3400       257            addc a, #0
0480 120051     258       lcall ?WriteData     
0483 7430       259            mov a, #'0'
0485 A202       260            mov c, PB1
0487 3400       261            addc a, #0
0489 120051     262       lcall ?WriteData     
048C 7430       263            mov a, #'0'
048E A201       264            mov c, PB0
0490 3400       265            addc a, #0
0492 120051     266       lcall ?WriteData     
0495 22         267            ret
0496            268   
0496 41444330   269   Title: db 'ADC0 push buttons', 0
     20707573
     68206275
     74746F6E
     7300
04A8 0D0A4144   270   InitialMessage: db '\r\nADC0 push buttons.  The push buttons voltage divider is connected to P1.7\r\n', 0
     43302070
     75736820
     62757474
     6F6E732E
     20205468
     65207075
     73682062
     7574746F
     6E732076
     6F6C7461
     67652064
     69766964
     65722069
     7320636F
     6E6E6563
     74656420
     746F2050
     312E370D
     0A00
04F6            271            
04F6            272   MainProgram:
04F6 75817F     273       mov SP, #0x7F
04F9            274   
04F9            275       ; Configure all the ports in bidirectional mode:
04F9 758400     276       mov P0M1, #00H
04FC 758500     277       mov P0M2, #00H
04FF 759100     278       mov P1M1, #00H
0502 759200     279       mov P1M2, #00H ; WARNING: P1.2 and P1.3 need 1kohm pull-up resistors!
0505 75A400     280       mov P2M1, #00H
0508 75A500     281       mov P2M2, #00H
050B 75B100     282       mov P3M1, #00H
050E 75B200     283       mov P3M2, #00H
0511            284            
0511 12034A     285            lcall InitSerialPort
0514 120360     286            lcall InitADC0
0517            287            
0517 12005B     288       lcall LCD_4BIT
051A            289       ; For convenience a few handy macros are included in 'LCD_4bit_LPC9351.inc':
051A C0E0       290            push acc
051C 7401       290            mov a, #1
051E 14         290            dec a
051F 12009D     290            lcall ?Set_Cursor_1 ; Select column and row
0522 D0E0       290            pop acc
0524 C083       291            push dph
0526 C082       291            push dpl
0528 C0E0       291            push acc
052A 900496     291            mov dptr, #Title
052D 120090     291            lcall ?Send_Constant_String
0530 D0E0       291            pop acc
0532 D082       291            pop dpl
0534 D083       291            pop dph
0536            292   
0536 12033D     293            lcall Wait1S ; Wait a bit so PUTTy has a chance to start
0539 9004A8     294            mov dptr, #InitialMessage
053C 1203EC     295            lcall SendString
053F            296   
053F            297   forever_loop:
053F            298       ; Send the conversion results via the serial port to putty.
053F 740D       299            mov a, #'\r' ; move cursor all the way to the left
0541 12032D     300       lcall putchar
0544            301       ; Display converted value from P1.7
0544 85C5F0     302            mov     b, AD0DAT0
0547 1203C8     303            lcall SendHex
054A            304            
054A 85C6F0     305            mov     b, AD0DAT1
054D 1203C8     306            lcall SendHex
0550            307            
0550            308            
0550 753000     309            mov x+0, #low (0 % 0x10000) 
0553 753100     309            mov x+1, #high(0 % 0x10000) 
0556 753200     309            mov x+2, #low (0 / 0x10000) 
0559 753300     309            mov x+3, #high(0 / 0x10000) 
055C 85C630     310       mov x+0, AD0DAT1
055F 7FFF       311            mov R7, #255
0561 120328     312       lcall Wait10us
0564            313   accumulate_loop:
0564 85C634     314       mov y+0, AD0DAT1
0567 753500     315       mov y+1, #0
056A 753600     316       mov y+2, #0
056D 753700     317       mov y+3, #0
0570 12017D     318       lcall add32
0573 120328     319       lcall Wait10us
0576 DFEC       320            djnz R7, accumulate_loop
0578            321            
0578            322            ; Now divide by 16 (2^4)
0578 753410     323            mov y+0, #low (16 % 0x10000) 
057B 753500     323            mov y+1, #high(16 % 0x10000) 
057E 753600     323            mov y+2, #low (16 / 0x10000) 
0581 753700     323            mov y+3, #high(16 / 0x10000) 
0584 1202BF     324            lcall div32
0587            325            ; x has now the 12-bit representation of the temperature
0587            326            
0587            327            ; Convert to temperature (C)
0587 7534F8     328            mov y+0, #low (43000 % 0x10000) 
058A 7535A7     328            mov y+1, #high(43000 % 0x10000) 
058D 753600     328            mov y+2, #low (43000 / 0x10000) 
0590 753700     328            mov y+3, #high(43000 / 0x10000)  ; Vref is 3.3V
0593 120232     329            lcall mul32
0596 7534FF     330            mov y+0, #low (((1<<12)-1) % 0x10000) 
0599 75350F     330            mov y+1, #high(((1<<12)-1) % 0x10000) 
059C 753600     330            mov y+2, #low (((1<<12)-1) / 0x10000) 
059F 753700     330            mov y+3, #high(((1<<12)-1) / 0x10000)  ; 2^12-1
05A2 1202BF     331            lcall div32
05A5 7534A4     332            mov y+0, #low (27300 % 0x10000) 
05A8 75356A     332            mov y+1, #high(27300 % 0x10000) 
05AB 753600     332            mov y+2, #low (27300 / 0x10000) 
05AE 753700     332            mov y+3, #high(27300 / 0x10000) 
05B1 12019E     333            lcall sub32
05B4            334            
05B4 1200B8     335            lcall hex2bcd
05B7            336            
05B7 120393     337            lcall SendTemp 
05BA            338            
05BA 1203F7     339            lcall ADC_to_PB
05BD 12044C     340            lcall Display_PushButtons_ADC
05C0 12033D     341            lcall Wait1S
05C3            342            
05C3 02053F     343            ljmp forever_loop
05C6            344   
05C6            345   
05C6            346   end
